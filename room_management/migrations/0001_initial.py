# Generated by Django 5.2.1 on 2025-06-07 06:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=100)),
                ('room_number', models.CharField(max_length=20, unique=True)),
                ('room_type', models.CharField(choices=[('study', 'Study Room'), ('meeting', 'Meeting Room'), ('conference', 'Conference Room'), ('computer', 'Computer Lab'), ('reading', 'Reading Room')], max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('location', models.CharField(max_length=200)),
                ('facilities', models.TextField(blank=True, help_text='List of available facilities')),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved')], default='available', max_length=20)),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['room_number'],
            },
        ),
        migrations.CreateModel(
            name='RoomEquipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False)),
                ('equipment_name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(choices=[('projector', 'Projector'), ('computer', 'Computer'), ('whiteboard', 'Whiteboard'), ('screen', 'Screen'), ('microphone', 'Microphone'), ('speaker', 'Speaker'), ('camera', 'Camera'), ('printer', 'Printer'), ('other', 'Other')], max_length=20)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('working', 'Working'), ('broken', 'Broken'), ('maintenance', 'Under Maintenance'), ('missing', 'Missing')], default='working', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_expires', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='room_management.room')),
            ],
            options={
                'ordering': ['room', 'equipment_name'],
            },
        ),
        migrations.CreateModel(
            name='RoomMaintenance',
            fields=[
                ('maintenance_id', models.AutoField(primary_key=True, serialize=False)),
                ('maintenance_type', models.CharField(choices=[('cleaning', 'Cleaning'), ('repair', 'Repair'), ('upgrade', 'Upgrade'), ('inspection', 'Inspection')], max_length=20)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('performed_by', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='room_management.room')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='RoomBooking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('purpose', models.CharField(max_length=200)),
                ('attendees_count', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('date_booked', models.DateTimeField(auto_now_add=True)),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room_bookings_approved', to=settings.AUTH_USER_MODEL)),
                ('booked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_bookings_made', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_bookings', to='room_management.room')),
            ],
            options={
                'ordering': ['-booking_date', '-start_time'],
                'constraints': [models.UniqueConstraint(fields=('room', 'booking_date', 'start_time'), name='unique_admin_room_booking_time')],
            },
        ),
    ]
